class Restaurant{constructor(e,t){this.departments=e||[],this.positions=t||[],this.restaurant=document.querySelector(".restaurant"),this.id=4,this.oldEmployeeId,this.render()}render(){this.showForm(),document.querySelector(".departmentSelect").insertAdjacentHTML("beforeend",this.addOptionsToSelect(this.departments)),document.querySelector(".positionSelect").insertAdjacentHTML("beforeend",this.addOptionsToSelect(this.positions)),document.querySelector("ul")&&document.querySelector("ul").remove();const e=this.restaurant.appendChild(document.createElement("ul"));let t=document.querySelector(".form");t.addEventListener("submit",this.handleSubmitForm.bind(this,t)),e.addEventListener("click",this.handleClick),this.showEmployeesList(e)}handleSubmitForm(e,t){t.preventDefault();let n=new FormData(e);this.addEmployee(n),e.remove()}handleSubmitEditForm(e,t){t.preventDefault();let n=new FormData(e);this.addEmployee(n),document.querySelector(".form")&&document.querySelector(".form").remove(),e.remove(),this.departments.forEach((e=>{e.employees.forEach(((e,t,n)=>{e.id===this.oldEmployeeId&&n.splice(t,1)}))})),this.render()}handleClick(e){if(e.preventDefault(),"BUTTON"!==e.target.nodeName)return;let t=Number(e.target.closest("li").dataset.id);"delete"===e.target.dataset.action&&(this.departments.forEach((e=>{e.employees.forEach(((e,n,o)=>{e.id===t&&o.splice(n,1)}))})),e.target.closest("li").remove()),"edit"===e.target.dataset.action&&this.departments.forEach((e=>{e.employees.forEach((e=>{e.id===t&&(document.querySelector(".form")&&document.querySelector(".form").remove(),newRestaurant.editsEmployee(e))}))}))}addOptionsToSelect(e){let t="";for(let n of e)t+=`<option value="${n.id}">${n.title}</option>`;return t}addDepartment(e,t){const n={id:e,title:t,employees:[]};return this.departments.push(n),n}addPosition(e,t){const n={id:e,title:t};return this.positions.push(n),n}findDepartment(e){return this.departments.find((t=>t.id===e))}findPosition(e){for(let t of this.positions)if(t.id===e)return t.title}addEmployee(e){let t=Number(e.get("department")),n=Number(e.get("position"));const o={id:this.id++,name:e.get("name"),surname:e.get("surname"),departmentId:t,position:this.findPosition(n),salary:Number(e.get("salary")),isFired:Boolean(e.get("isFired"))};this.findDepartment(t).employees.push(o),this.render()}getSumSalary(e){let t=0;for(let n of this.departments)if(n.id===e)for(let e of n.employees)e.isFired||(t+=e.salary);return t}getMeanSalary(e){let t=0,n=0;for(let o of this.departments)if(o.id===e)for(let e of o.employees)e.isFired||(t+=e.salary,n++);return Math.round(t/n)}getExtremumSalary(e,t,n){let o=[];for(let n of this.departments)if(n.id===e)for(let e of n.employees)e.isFired||e.position!==this.findPosition(t)||o.push(e.salary);return"min"===n?Math.min(...o):"max"===n?Math.max(...o):void 0}getFiredEmployees(){let e=0;for(let t of this.departments)for(let n of t.employees)n.isFired&&e++;return e}getDepartmentsWithoutPosition(e){let t=[];for(let n of this.departments){let o=0;for(let t of n.employees)t.isFired||t.position!==this.findPosition(e)||o++;0===o&&t.push(n.title)}return t}editsEmployee(e){const t=this.findDepartment(e.departmentId);let n;this.oldEmployeeId=e.id;for(let t of this.positions)t.title===e.position&&(n=t.id);let o=`<form class="editForm">\n     <label>\n     Department\n     <select name="department" class="departmentSelect")>\n     <option value="${e.departmentId}">${t.title}</option>\n     </select>\n     </label>\n     <label>\n     Name\n     <input type="text" name="name" value="${e.name}"/>\n     </label>\n     <label>\n       Surname\n       <input type="text" name="surname" value="${e.surname}"/>\n       </label>\n     <label>\n     Position\n     <select name="position" class="positionSelect">\n       <option value="${n}">${e.position}</option>\n       </select>\n       </label>\n       <label>\n       Salary\n       <input type="text" name="salary" value="${e.salary}"/>\n       </label>\n       <label>\n       isFired\n       <select name="isFired">\n       <option value="${e.isFired}" disabled>${e.isFired}</option>\n       <option value="false">false</option>\n          <option value="true">true</option>\n       </select>\n     </label>\n     <button type="submit">Edit</button>\n     </form>`;newRestaurant.showForm(o),document.querySelector(".departmentSelect").insertAdjacentHTML("beforeend",this.addOptionsToSelect(this.departments)),document.querySelector(".positionSelect").insertAdjacentHTML("beforeend",this.addOptionsToSelect(this.positions));let i=document.querySelector(".editForm");i.addEventListener("submit",this.handleSubmitEditForm.bind(this,i))}showForm(e){let t="";t=e||'<form class="form">\n        <label>\n        Department\n        <select name="department" class="departmentSelect")>\n        <option></option>\n        </select>\n        </label>\n        <label>\n        Name\n        <input type="text" name="name" />\n        </label>\n        <label>\n          Surname\n          <input type="text" name="surname" />\n          </label>\n        <label>\n        Position\n        <select name="position" class="positionSelect">\n          <option></option>\n          </select>\n          </label>\n          <label>\n          Salary\n          <input type="text" name="salary" />\n          </label>\n          <label>\n          isFired\n          <select name="isFired">\n          <option></option>\n          <option value="false">false</option>\n          <option value="true">true</option>\n          </select>\n        </label>\n        <button type="submit">Add</button>\n        </form>',this.restaurant.insertAdjacentHTML("afterbegin",t)}showEmployeesList(e){this.departments.forEach((t=>{t.employees.forEach((({id:n,name:o,surname:i,departmentId:a,position:s,salary:r,isFired:l})=>{const d=`<li class="employee-item" data-id=${n} data-department=${a}>\n                <span>Department: <span>${t.title}</span> |</span>\n                <span>Name: <span>${o}</span> |</span>\n                <span>Surname: <span>${i}</span> |</span>\n                <span>Position: <span>${s}</span> |</span>\n                <span>Salary: <span>${r}</span> |</span>\n                <span>isFired: <span>${l}</span> |</span>\n                <button type="button" data-action="edit">edit</button>\n                <button type="button" data-action="delete">delete</button>\n                </li>`;e.insertAdjacentHTML("beforeend",d)}))}))}}const newRestaurant=new Restaurant;